METHOD_BODY --> STATEMENT_LIST 
STATEMENT_LIST --> STATEMENT STATEMENT_LIST& 
STATEMENT --> DECLARATION 
DECLARATION --> PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE --> int 
matching (int), with token (int).
matching (id), with token (id).
matching (;), with token (;).
STATEMENT_LIST& --> STATEMENT STATEMENT_LIST& 
STATEMENT --> WHILE 
WHILE --> while ( EXPRESSION ) { STATEMENT } 
matching (while), with token (while).
matching ((), with token (().
EXPRESSION --> SIMPLE_EXPRESSION EXPRESSION& 
SIMPLE_EXPRESSION --> TERM SIMPLE_EXPRESSION& 
TERM --> FACTOR TERM& 
FACTOR --> id 
matching (id), with token (id).
TERM& --> 27 
SIMPLE_EXPRESSION& --> 27 
EXPRESSION& --> relop SIMPLE_EXPRESSION 
matching (relop), with token (relop).
SIMPLE_EXPRESSION --> TERM SIMPLE_EXPRESSION& 
TERM --> FACTOR TERM& 
FACTOR --> num 
matching (num), with token (num).
ERROR: illegal (TERM&), discard token ()).
ERROR: illegal (TERM&), discard token ({).
ERROR: illegal (TERM&), discard token (id).
ERROR: illegal (TERM&), discard token (=).
ERROR: illegal (TERM&), discard token (id).
TERM& --> 27 
SIMPLE_EXPRESSION& --> addop TERM SIMPLE_EXPRESSION& 
matching (addop), with token (addop).
TERM --> FACTOR TERM& 
FACTOR --> num 
matching (num), with token (num).
ERROR: illegal (TERM&), discard token (;).
ERROR: illegal (TERM&), discard token (}).
ERROR: illegal (TERM&), discard token (if).
ERROR: illegal (TERM&), discard token (().
ERROR: illegal (TERM&), discard token (id).
TERM& --> 27 
SIMPLE_EXPRESSION& --> 27 
ERROR: missing token ()), inserted.
ERROR: missing token ({), inserted.
ERROR: illegal (STATEMENT), discard token (relop).
ERROR: illegal (STATEMENT), discard token (num).
ERROR: illegal (STATEMENT), discard token ()).
ERROR: illegal (STATEMENT), discard token ({).
STATEMENT --> ASSIGNMENT 
ASSIGNMENT --> id = EXPRESSION ; 
matching (id), with token (id).
matching (=), with token (=).
EXPRESSION --> SIMPLE_EXPRESSION EXPRESSION& 
SIMPLE_EXPRESSION --> TERM SIMPLE_EXPRESSION& 
TERM --> FACTOR TERM& 
FACTOR --> id 
matching (id), with token (id).
TERM& --> 27 
SIMPLE_EXPRESSION& --> addop TERM SIMPLE_EXPRESSION& 
matching (addop), with token (addop).
TERM --> FACTOR TERM& 
FACTOR --> num 
matching (num), with token (num).
ERROR: illegal (TERM&), discard token (;).
ERROR: illegal (TERM&), discard token (}).
ERROR: illegal (TERM&), discard token (else).
ERROR: illegal (TERM&), discard token ({).
ERROR: illegal (TERM&), discard token (id).
ERROR: illegal (TERM&), discard token (=).
ERROR: illegal (TERM&), discard token (id).
TERM& --> 27 
SIMPLE_EXPRESSION& --> addop TERM SIMPLE_EXPRESSION& 
matching (addop), with token (addop).
TERM --> FACTOR TERM& 
FACTOR --> id 
matching (id), with token (id).
ERROR: illegal (TERM&), discard token (;).
ERROR: illegal (TERM&), discard token (}).
ERROR: illegal (TERM&), discard token (36).
Number of errors: 26
